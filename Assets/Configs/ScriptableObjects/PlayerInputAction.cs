//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Configs/ScriptableObjects/PlayerInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputAction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputAction"",
    ""maps"": [
        {
            ""name"": ""PlayerControll"",
            ""id"": ""0a969959-7007-4541-959a-447a164fafa9"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""4dd2f866-13b6-462b-b5d4-e91e10f5a6a5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""b95672e3-abb9-4095-ac3d-80f5f21f8af3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FirstWeaponShoot"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3e6eef6a-3d1b-4693-90be-20207130f054"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondWeaponShoot"",
                    ""type"": ""PassThrough"",
                    ""id"": ""faee9aaa-57c9-4758-ae28-7e53f9d1bb9a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThirdWeaponShoot"",
                    ""type"": ""PassThrough"",
                    ""id"": ""de3507e5-6fcf-4db1-9c80-d43e2835ad51"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FourthWeaponShoot"",
                    ""type"": ""PassThrough"",
                    ""id"": ""91f209cf-8d75-4fdd-8388-f363b82e6637"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b55a0577-5f4e-40e1-b0f1-ef375015c67c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WSAD"",
                    ""id"": ""b12bbfc6-2da7-42b8-807c-c7193acf92ce"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""acecfbc8-c553-40e7-8607-5356ff90c768"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""15e1cac9-b439-46d9-bf21-405c6a63ab7d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8037f67f-c844-4213-8100-5ec8a2e69961"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""13ceffc1-2f0a-4b8a-b77c-f1896a31e44f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrow"",
                    ""id"": ""f717fdd2-3144-44fa-86cc-7e043ae08309"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""527877c6-be4b-46d2-b3f2-470c23a09b1c"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8a2ed36a-49d9-4a84-9676-40165eb99028"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a304271d-b6de-4f09-9ef1-6e3b28e67b18"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f4c76266-e61e-4579-8f6e-141e8819a26b"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left Stick"",
                    ""id"": ""4c7b99e9-fffe-4ce2-907d-7e0f944c8659"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""311f7905-ea3a-40c9-844f-70f9d0f220da"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7bff1b2b-7623-414c-951c-9985829590b1"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""85b4da31-2027-4e3c-a2ca-4a9fe19d5575"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""91ece860-f341-433e-8a04-6211eaac8d8f"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right Stick"",
                    ""id"": ""c58c16ee-eb13-484d-94b5-160ea6526ee1"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""71e7e514-ef60-470b-89e6-238ff49b3c61"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a47c3571-01e7-43ec-9319-fd4799017158"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""eca89368-fb52-42cc-9a61-aaa4863fe46e"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""89e466e0-9ef9-43ce-9cee-4a1f9cae892d"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""LeftStick"",
                    ""id"": ""b8ded2e5-6bdf-48ee-a0f0-2c831cc15f54"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""74663ef5-ad1b-4e6b-90cd-ed140b0cd8f5"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""DualSence"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""88146a56-a56d-4f38-a380-908e9416d7c5"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""DualSence"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""896966d9-da16-46d4-a95d-e5c4b12c53ff"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""DualSence"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""df047d4a-183e-470e-8275-b5500b68c008"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""DualSence"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""46ecd113-9ebb-49f1-8f56-0e5cec563de9"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5a73658-c97f-46c8-b439-2d3a7cad9088"",
                    ""path"": ""<DualSenseGamepadHID>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""DualSence"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c0386f8-6172-4123-94df-bbc3381b87d3"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3575ae5-3fdb-452f-a15d-b68f6080dd7d"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b3e7dd6-7bd3-455b-a5a3-29ced613be39"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstWeaponShoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65d347ef-f71b-4f53-8e26-a63e6109d9ab"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22110300-5da0-40c6-9c11-bcf095f9d381"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondWeaponShoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9180daf4-13ff-4d52-9abe-4b08455fa971"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThirdWeaponShoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34923520-e565-4e61-af96-1007a979195b"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FourthWeaponShoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard & Mouse"",
            ""bindingGroup"": ""Keyboard & Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""DualSence"",
            ""bindingGroup"": ""DualSence"",
            ""devices"": [
                {
                    ""devicePath"": ""<DualSenseGamepadHID>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PlayerControll
        m_PlayerControll = asset.FindActionMap("PlayerControll", throwIfNotFound: true);
        m_PlayerControll_Move = m_PlayerControll.FindAction("Move", throwIfNotFound: true);
        m_PlayerControll_Pause = m_PlayerControll.FindAction("Pause", throwIfNotFound: true);
        m_PlayerControll_FirstWeaponShoot = m_PlayerControll.FindAction("FirstWeaponShoot", throwIfNotFound: true);
        m_PlayerControll_SecondWeaponShoot = m_PlayerControll.FindAction("SecondWeaponShoot", throwIfNotFound: true);
        m_PlayerControll_ThirdWeaponShoot = m_PlayerControll.FindAction("ThirdWeaponShoot", throwIfNotFound: true);
        m_PlayerControll_FourthWeaponShoot = m_PlayerControll.FindAction("FourthWeaponShoot", throwIfNotFound: true);
        m_PlayerControll_MousePosition = m_PlayerControll.FindAction("MousePosition", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerControll
    private readonly InputActionMap m_PlayerControll;
    private List<IPlayerControllActions> m_PlayerControllActionsCallbackInterfaces = new List<IPlayerControllActions>();
    private readonly InputAction m_PlayerControll_Move;
    private readonly InputAction m_PlayerControll_Pause;
    private readonly InputAction m_PlayerControll_FirstWeaponShoot;
    private readonly InputAction m_PlayerControll_SecondWeaponShoot;
    private readonly InputAction m_PlayerControll_ThirdWeaponShoot;
    private readonly InputAction m_PlayerControll_FourthWeaponShoot;
    private readonly InputAction m_PlayerControll_MousePosition;
    public struct PlayerControllActions
    {
        private @PlayerInputAction m_Wrapper;
        public PlayerControllActions(@PlayerInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PlayerControll_Move;
        public InputAction @Pause => m_Wrapper.m_PlayerControll_Pause;
        public InputAction @FirstWeaponShoot => m_Wrapper.m_PlayerControll_FirstWeaponShoot;
        public InputAction @SecondWeaponShoot => m_Wrapper.m_PlayerControll_SecondWeaponShoot;
        public InputAction @ThirdWeaponShoot => m_Wrapper.m_PlayerControll_ThirdWeaponShoot;
        public InputAction @FourthWeaponShoot => m_Wrapper.m_PlayerControll_FourthWeaponShoot;
        public InputAction @MousePosition => m_Wrapper.m_PlayerControll_MousePosition;
        public InputActionMap Get() { return m_Wrapper.m_PlayerControll; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerControllActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerControllActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerControllActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerControllActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @FirstWeaponShoot.started += instance.OnFirstWeaponShoot;
            @FirstWeaponShoot.performed += instance.OnFirstWeaponShoot;
            @FirstWeaponShoot.canceled += instance.OnFirstWeaponShoot;
            @SecondWeaponShoot.started += instance.OnSecondWeaponShoot;
            @SecondWeaponShoot.performed += instance.OnSecondWeaponShoot;
            @SecondWeaponShoot.canceled += instance.OnSecondWeaponShoot;
            @ThirdWeaponShoot.started += instance.OnThirdWeaponShoot;
            @ThirdWeaponShoot.performed += instance.OnThirdWeaponShoot;
            @ThirdWeaponShoot.canceled += instance.OnThirdWeaponShoot;
            @FourthWeaponShoot.started += instance.OnFourthWeaponShoot;
            @FourthWeaponShoot.performed += instance.OnFourthWeaponShoot;
            @FourthWeaponShoot.canceled += instance.OnFourthWeaponShoot;
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
        }

        private void UnregisterCallbacks(IPlayerControllActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @FirstWeaponShoot.started -= instance.OnFirstWeaponShoot;
            @FirstWeaponShoot.performed -= instance.OnFirstWeaponShoot;
            @FirstWeaponShoot.canceled -= instance.OnFirstWeaponShoot;
            @SecondWeaponShoot.started -= instance.OnSecondWeaponShoot;
            @SecondWeaponShoot.performed -= instance.OnSecondWeaponShoot;
            @SecondWeaponShoot.canceled -= instance.OnSecondWeaponShoot;
            @ThirdWeaponShoot.started -= instance.OnThirdWeaponShoot;
            @ThirdWeaponShoot.performed -= instance.OnThirdWeaponShoot;
            @ThirdWeaponShoot.canceled -= instance.OnThirdWeaponShoot;
            @FourthWeaponShoot.started -= instance.OnFourthWeaponShoot;
            @FourthWeaponShoot.performed -= instance.OnFourthWeaponShoot;
            @FourthWeaponShoot.canceled -= instance.OnFourthWeaponShoot;
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
        }

        public void RemoveCallbacks(IPlayerControllActions instance)
        {
            if (m_Wrapper.m_PlayerControllActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerControllActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerControllActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerControllActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerControllActions @PlayerControll => new PlayerControllActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard & Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_DualSenceSchemeIndex = -1;
    public InputControlScheme DualSenceScheme
    {
        get
        {
            if (m_DualSenceSchemeIndex == -1) m_DualSenceSchemeIndex = asset.FindControlSchemeIndex("DualSence");
            return asset.controlSchemes[m_DualSenceSchemeIndex];
        }
    }
    public interface IPlayerControllActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnFirstWeaponShoot(InputAction.CallbackContext context);
        void OnSecondWeaponShoot(InputAction.CallbackContext context);
        void OnThirdWeaponShoot(InputAction.CallbackContext context);
        void OnFourthWeaponShoot(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
    }
}
